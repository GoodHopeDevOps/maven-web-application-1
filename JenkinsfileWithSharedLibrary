@Library('sharedlibsbatp') _
node{

try{

  sendSlackNotifications('STARTED')
 def mavenHome = tool name: 'maven3.8.6'
 
 echo "The Job name is: ${env.JOB_NAME}" 
 echo "The node name is: ${env.NODE_NAME}"
 echo "The build number is: ${env.BUILD_NUMBER}"
 
  properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
  

  stage('CodeCheckOut'){
  git branch: 'master', credentialsId: '4d452a2aq-466s-9ss2-4d1d-6f522frd2d2d', url: 'https://github.com/SourceTechTalents/maven-web-application'
  }
  
  stage('Build'){
  sh "${mavenHome}/bin/mvn package"
  }
  
  /*
  stage('RunCodeQualityAnalysis')
  {
  sh "${mavenHome}/bin/mvn clean sonar:sonar"
  }
  
  stage('UploadArtifactsToNexus')
  {
  sh "${mavenHome}/bin/mvn clean deploy"
  }
  
   stage('DeployApplicationUsingTomcat'){
  sshagent(['55s552s4q-9s14-6s55-6d4s-2s2f45f6r32']) {
   sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.42.12:/opt/apache-tomcat-9.0.67/webapps/"   
  }
  }
  */
  }//try closing
  catch(e){
  currentBuild.result="FAILURE"
  throw e
  }//catch closing
  finally{
  sendSlackNotifications(currentBuild.result)
  }
} //Node closing

/*
//Code Snippet for sending slack notifications.

def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'
  //buildStatus = buildStatus ? "SUCCESS":"FAILURE"

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'ORANGE'
    colorCode = '#FFA500'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: "#nestle")
}

*/



